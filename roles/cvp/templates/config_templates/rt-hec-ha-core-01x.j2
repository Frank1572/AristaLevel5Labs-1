!
hostname rt-hec{{ hec.hec_nr }}-ha-core-0{{ item.number }}
!
snmp-server contact {{ item.snmp.contact }}
snmp-server location {{ item.snmp.location }}
!
bfd local-address {{ item.loopback1_ip }}
!
{% for interface in item.ports %}
{% if interface.type is defined %}
{% if interface.type != 'Ethernet' %}
{% if interface.type|lower == 'vlan' %}{% set inttype = 'Vlan' %}{% endif %}
{% if interface.type|lower == 'spine_link' %}{% set inttype = 'Ethernet' %}{% endif %}
interface {{ inttype }}{{ interface.id }}
{% endif %}
{% endif %}
{% if interface.type is not defined %}
interface Ethernet{{ interface.id }}
{% endif %}
   description ->{{ interface.description }}
{% if interface.ip is defined %}
   ip address {{ interface.ip }}
{% endif %} 
{% endfor %}  

{% set spine_port_towards_leaf = item.spine_port_towards_leaf %}
{% if hec.spine.model|string == '7504' or hec.spine.model|string == '7508'  %}
{# Chassis based devices #}
{% set spine_lc = spine_port_towards_leaf | regex_replace('^Et(?P<lcnr>\d{1,2})/\d{1,2}/1$', '\\g<lcnr>') %}
{% set spine_po = spine_port_towards_leaf | regex_replace('^Et\d{1,2}/(?P<ponr>.*)/.*$', '\\g<ponr>')%}
{% endif %}
{% if hec.spine.model|string == '7280.*' %}
{# Non-modular switches like 7280 #}
{% set spine_lc = spine_port_towards_leaf | regex_replace('^Et(?P<lcnr>\d{1,2})/1$', '0') %}
{% set spine_po = spine_port_towards_leaf | regex_replace('^Et(?P<ponr>.*)/1$', '\\g<ponr>')%}
{% endif %}
{% if spine_lc|int > 0 %}
{% set offset = spine_lc|int - 3 %}
{% else %}
{% set offset = 0 %}
{% endif %}
{% set ip = spine_po|int * 2 - 1 %}
{% set ip = ip + 72 * offset %}
{% set nextsubnet = 0 %}
{% if ip > 255 %}
{% set ip = ip - 256 %}
{% set nextsubnet = 1 %}
{% endif %}
{% if ip > 255 %}
{% set ip = ip - 256 %}
{% set nextsubnet = 2 %}
{% endif %}
{% set link_ip = ip %}
{% for interface in item.uplinks %}
interface Ethernet{{ interface }}
   description ->sw-hec{{ hec.hec_nr }}-spine-{{ loop.index + 10 }}, {{ spine_port_towards_leaf }}
   ip address 10.{{ loop.index + 10 }}.{{ nextsubnet }}.{{ link_ip }}/31
!
{% endfor %}
!
interface Loopback1 
   ip address {{ item.loopback1_ip }}/32
   ip address 10.254.200.1/32 secondary
! 
interface Loopback900 
   ip address {{ item.nwmgmt_ip }}/32
! 
interface Management1 
   ip address {{ item.oob_ip }}/{{hec.oob_mask}}
!
{% for interface in item.ports %}
{% if interface.id == '26/1' %}
{% set local_ha_ip_last_octett = interface.ip.split("/")[0].split(".")[3] | int %}
{% if local_ha_ip_last_octett % 2 == 0 %}
{% set remote_ha_ip_last_octett = local_ha_ip_last_octett | int +1 %}
{% else %}
{% set remote_ha_ip_last_octett = local_ha_ip_last_octett | int -1 %}
{% endif %}
{% set remote_ha_ip = interface.ip.split(".")[0] + "." + interface.ip.split(".")[1] + "." + interface.ip.split(".")[2] + "." + remote_ha_ip_last_octett | string %}
{% for remote_edge in hec.ngdr_overlay.remote_edge_routers %} 
ip route {{ remote_edge.ip }}/32 Ethernet{{ interface.id }} {{ remote_ha_ip }}
{% endfor %}
{% endif %}
{% endfor %}

{% for interface in item.ports %}
{% if interface.id == '26/1' %}
{% set local_ha_ip_last_octett = interface.ip.split("/")[0].split(".")[3] | int %}
{% if local_ha_ip_last_octett % 2 == 0 %}
{% set remote_ha_ip_last_octett = local_ha_ip_last_octett | int +1 %}
{% else %}
{% set remote_ha_ip_last_octett = local_ha_ip_last_octett | int -1 %}
{% endif %}
{% set remote_ha_ip = interface.ip.split(".")[0] + "." + interface.ip.split(".")[1] + "." + interface.ip.split(".")[2] + "." + remote_ha_ip_last_octett | string %}
ip route {{ item.remote_ha_ip }}/32 Ethernet{{ interface.id }} {{ remote_ha_ip }}
{% endif %}
{% endfor %}
!
router bgp 641{{ hec.hec_nr }}.10999 
   router-id {{ item.loopback1_ip }}
{% for interface in item.uplinks %}
   neighbor 10.{{ loop.index + 10 }}.{{ nextsubnet }}.{{ link_ip | int -1 }} peer-group PG-SPINE
{% endfor %}

{% for interface in item.ports %}
{% if interface.id == '26/1' %}
{% set local_ha_ip_last_octett = interface.ip.split("/")[0].split(".")[3] | int %}
{% if local_ha_ip_last_octett % 2 == 0 %}
{% set remote_ha_ip_last_octett = local_ha_ip_last_octett | int +1 %}
{% else %}
{% set remote_ha_ip_last_octett = local_ha_ip_last_octett | int -1 %}
{% endif %}
{% set remote_ha_ip = interface.ip.split(".")[0] + "." + interface.ip.split(".")[1] + "." + interface.ip.split(".")[2] + "." + remote_ha_ip_last_octett | string %}
   neighbor {{ remote_ha_ip }} peer-group PG-RMT-HA-ROUTER
   neighbor {{ remote_ha_ip }} description *** BGP to rt-hec{{ hec.ngdr_overlay.remote_hec_nr }}-ha-core-0{{ item.number}} ***
   address-family evpn 
      neighbor {{ remote_ha_ip }} activate 
{% endif %}
{% endfor %}

{% if item.number == '1a' %}
{% set ha_neighbor1_ip = item.loopback1_ip.split(".")[3] | int +1 %}
{% set ha_neighbor1_letter = 'b' %}
{% set ha_neighbor2_ip = item.loopback1_ip.split(".")[3] | int +2 %}
{% set ha_neighbor2_letter = 'c' %}
{% set ha_neighbor3_ip = item.loopback1_ip.split(".")[3] | int +3 %}
{% set ha_neighbor3_letter = 'd' %}
{% elif item.number == '1b' %}
{% set ha_neighbor1_ip = item.loopback1_ip.split(".")[3] | int -1 %}
{% set ha_neighbor1_letter = 'a' %}
{% set ha_neighbor2_ip = item.loopback1_ip.split(".")[3] | int +1 %}
{% set ha_neighbor2_letter = 'c' %}
{% set ha_neighbor3_ip = item.loopback1_ip.split(".")[3] | int +2 %}
{% set ha_neighbor3_letter = 'd' %}
{% elif item.number == '1c' %}
{% set ha_neighbor1_ip = item.loopback1_ip.split(".")[3] | int -2 %}
{% set ha_neighbor1_letter = 'a' %}
{% set ha_neighbor2_ip = item.loopback1_ip.split(".")[3] | int -1 %}
{% set ha_neighbor2_letter = 'b' %}
{% set ha_neighbor3_ip = item.loopback1_ip.split(".")[3] | int +1 %}
{% set ha_neighbor3_letter = 'd' %}
{% elif item.number == '1d' %}
{% set ha_neighbor1_ip = item.loopback1_ip.split(".")[3] | int -3 %}
{% set ha_neighbor1_letter = 'a' %}
{% set ha_neighbor2_ip = item.loopback1_ip.split(".")[3] | int -2 %}
{% set ha_neighbor2_letter = 'b' %}
{% set ha_neighbor3_ip = item.loopback1_ip.split(".")[3] | int -1 %}
{% set ha_neighbor3_letter = 'c' %}
{% endif %}
   neighbor {{ item.loopback1_ip.split(".")[0] }}.{{ item.loopback1_ip.split(".")[1] }}.{{ item.loopback1_ip.split(".")[2] }}.{{ ha_neighbor1_ip }} peer-group PG-HA-ROUTER
   neighbor {{ item.loopback1_ip.split(".")[0] }}.{{ item.loopback1_ip.split(".")[1] }}.{{ item.loopback1_ip.split(".")[2] }}.{{ ha_neighbor1_ip }} description *** EVPN to rt-hec{{ hec.hec_nr }}-ha-core-01{{ ha_neighbor1_letter }} ***
   neighbor {{ item.loopback1_ip.split(".")[0] }}.{{ item.loopback1_ip.split(".")[1] }}.{{ item.loopback1_ip.split(".")[2] }}.{{ ha_neighbor2_ip }} peer-group PG-HA-ROUTER
   neighbor {{ item.loopback1_ip.split(".")[0] }}.{{ item.loopback1_ip.split(".")[1] }}.{{ item.loopback1_ip.split(".")[2] }}.{{ ha_neighbor2_ip }} description *** EVPN to rt-hec{{ hec.hec_nr }}-ha-core-01{{ ha_neighbor2_letter }} ***
   neighbor {{ item.loopback1_ip.split(".")[0] }}.{{ item.loopback1_ip.split(".")[1] }}.{{ item.loopback1_ip.split(".")[2] }}.{{ ha_neighbor3_ip }} peer-group PG-HA-ROUTER
   neighbor {{ item.loopback1_ip.split(".")[0] }}.{{ item.loopback1_ip.split(".")[1] }}.{{ item.loopback1_ip.split(".")[2] }}.{{ ha_neighbor3_ip }} description *** EVPN to rt-hec{{ hec.hec_nr }}-ha-core-01{{ ha_neighbor3_letter }} ***
   ! 
   address-family evpn 
      neighbor {{ item.loopback1_ip.split(".")[0] }}.{{ item.loopback1_ip.split(".")[1] }}.{{ item.loopback1_ip.split(".")[2] }}.{{ ha_neighbor1_ip }} activate
      neighbor {{ item.loopback1_ip.split(".")[0] }}.{{ item.loopback1_ip.split(".")[1] }}.{{ item.loopback1_ip.split(".")[2] }}.{{ ha_neighbor2_ip }} activate
      neighbor {{ item.loopback1_ip.split(".")[0] }}.{{ item.loopback1_ip.split(".")[1] }}.{{ item.loopback1_ip.split(".")[2] }}.{{ ha_neighbor3_ip }} activate
   !
   vlan-aware-bundle all-vlans 
      rd {{ item.loopback1_ip }}:1 
   ! 
   address-family ipv4 
{% for interface in item.uplinks %}
      neighbor 10.{{ loop.index + 10 }}.{{ nextsubnet }}.{{ link_ip | int -1 }} activate
{% endfor %}
      network 10.254.200.1/32
      network {{ item.nwmgmt_ip }}/32
      network {{ item.remote_ha_ip }}/32
      network {{ item.loopback1_ip }}/32
   ! 
! 
