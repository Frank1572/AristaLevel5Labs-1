---
# file: roles/cvp/tasks/main.yml

- name: Get status of CVP VM
  virt:
    command: "status"
    name: "{{ cvp.KvmDomain }}"
  register: vm_status
  tags:
    - cvp_stop

- name: Stop CVP VM if running
  virt:
    state: "shutdown"
    name: "{{ cvp.KvmDomain }}"
  when: vm_status.status == "running" or vm_status.status == "paused"
  tags:
    - cvp_stop

- name: Wait for VW to be shutdown
  virt:
    command: "status"
    name: "{{ cvp.KvmDomain }}"
  register: new_vm_status
  until: new_vm_status.status == "shutdown"
  retries: 10
  delay: 15
  tags:
    - cvp_stop

- name: Check if directory /data/cvp_old exists
  stat:
    path: '/data/cvp_old'
  register: cvp_old_dir
  tags:
    - cvp_stop

- name: Delete /data/cvp_old if exists
  file:
    state: absent
    path: '/data/cvp_old'
  when: cvp_old_dir.stat.exists and cvp_old_dir.stat.isdir
  tags:
    - cvp_stop

- name: Move current CVP to another directory (/data/cvp_old/)
  command: "mv /data/cvp /data/cvp_old"
  when: new_vm_status.status == "shutdown"
  tags:
    - cvp_stop

- name: Check that the cvp kvm file exists in {{ cvp.path_to_cvp_file }}
  delegate_to: 127.0.0.1
  stat:
    path: "{{ cvp.path_to_cvp_file }}{{ cvp.version }}"
  register: cvp_exists
  tags:
    - cvp_install

- name: CVP KVM file exists?
  debug:
    msg: "File exists: {{ cvp_exists.stat.exists }}"
  tags:
    - cvp_install

- name: Create directory for new CVP (/data/cvp/)
  command: "mkdir /data/cvp"
  args:
    warn: no
  when: cvp_exists.stat.exists == True
  tags:
    - cvp_install

- name: Copy CVP KVM file to CVA (this might take some time)
  copy:
    src: "{{ cvp.path_to_cvp_file }}{{ cvp.version }}"
    dest: "/data/cvp/{{ cvp.version }}"
    owner: root
    group: root
    mode: 0755
  when: cvp_exists.stat.exists == True
  tags:
    - cvp_install

- name: Unzip the CVP KVM file on the CVA 
  command: "tar -zxvf /data/cvp/{{ cvp.version }} -C /data/cvp"
  args:
    warn: no
  tags:
    - cvp_install

- name: Find name of old disk 1 
  find:
    paths: /data/cvp_old
    file_type: file
    patterns: '*disk1*'
  register: disk1_old
  tags:
    - cvp_install

- name: Find name of old disk 2 
  find:
    paths: /data/cvp_old
    file_type: file
    patterns: '*disk2*'
  register: disk2_old
  tags:
    - cvp_install

- name: Find name of new disk 1 
  find:
    paths: /data/cvp
    file_type: file
    patterns: '*disk1*'
  register: disk1_new
  tags:
    - cvp_install

- name: Find name of new disk 2 
  find:
    paths: /data/cvp
    file_type: file
    patterns: '*disk2*'
  register: disk2_new
  tags:
    - cvp_install

- name: Rename the new disk 1 the same as the old disk 1 was named 
  command: "mv /data/cvp/{{ disk1_new.files[0].path | regex_replace('.*cvp/(.*)', '\\1') }} /data/cvp/{{ disk1_old.files[0].path | regex_replace('.*cvp_old/(.*)', '\\1') }}"
  ignore_errors: yes 
  args:
    warn: no
  tags:
    - cvp_install

- name: Rename the new disk 2 the same as the old disk 2 was named 
  command: "mv /data/cvp/{{ disk2_new.files[0].path | regex_replace('.*cvp/(.*)', '\\1') }} /data/cvp/{{ disk2_old.files[0].path | regex_replace('.*cvp_old/(.*)', '\\1') }}"
  ignore_errors: yes 
  args:
    warn: no
  tags:
    - cvp_install

- name: Copy old cvp.xml VM definition file to /data/cvp folder 
  command: "cp /data/cvp_old/cvp.xml /data/cvp/cvp.xml"
  args:
    warn: no
  tags:
    - cvp_install

- name: Start new CVP VM
  virt:
    state: "running"
    name: "{{ cvp.KvmDomain }}"
  tags:
    - cvp_install

- name: Render and create YAML File
  delegate_to: 127.0.0.1
  template:
    src: "templates/singlenode.j2"
    dest: "{{role_path}}/files/singlenode.yaml"
  tags:
    - cvp_init

- name: Copy YAML File to CVA
  copy:
    src: "{{role_path}}/files/singlenode.yaml"
    dest: /tmp/singlenode.yaml
    owner: root
    group: root
    mode: 0755
  tags:
    - cvp_init

- name: Copy cvpConfigParser.py to CVA
  copy:
    src: "{{role_path}}/files/cvpConfigParser.py"
    dest: /tmp/cvpConfigParser.py
    owner: root
    group: root
    mode: 0755
  tags:
    - cvp_init

- name: Copy geniso.py to CVA
  copy:
    src: "{{role_path}}/files/geniso.py"
    dest: /tmp/geniso.py
    owner: root
    group: root
    mode: 0755
  tags:
    - cvp_init

- name: Copy setuptools to CVA
  copy:
    src: "{{role_path}}/files/setuptools-41.0.1.tar.gz"
    dest: /tmp/setuptools-41.0.1.tar.gz
    owner: root
    group: root
    mode: 0755
  tags:
    - cvp_init

- name: Unzip setuptools
  command: "tar -zxvf /tmp/setuptools-41.0.1.tar.gz -C /tmp"
  tags:
    - cvp_init

#- name: Extract setuptools to CVA
#  unarchive:
#    src: "{{role_path}}/files/setuptools-41.0.1.zip"
#    dest: /tmp/
#  tags:
#    - cvp_init

- name: Build setuptools
  command: "python /tmp/setuptools-41.0.1/setup.py build"
  tags:
    - cvp_init

- name: Install setuptools
  command: "python /tmp/setuptools-41.0.1/setup.py install"
  tags:
    - cvp_init

- name: Copy setuptools folder to python libs
  command: "cp -r /tmp/setuptools-41.0.1/. /usr/lib/python2.7/site-packages/"
  tags:
    - cvp_init

- name: Extract pip to CVA
  unarchive:
    src: "{{role_path}}/files/pip-19.1.1.tar.gz"
    dest: /tmp/
  tags:
    - cvp_init

- name: Install pip
  shell: python setup.py install
  args:
    chdir: /tmp/pip-19.1.1/
  tags:
    - cvp_init

- name: Copy PyYAML-5.1.tar.gz to CVA
  copy:
    src: "{{role_path}}/files/PyYAML-5.1.tar.gz"
    dest: /tmp/PyYAML-5.1.tar.gz
    owner: root
    group: root
    mode: 0755
  tags:
    - cvp_init

- name: Install PyYaml
  command: "pip install /tmp/PyYAML-5.1.tar.gz"
  tags:
    - cvp_init

- name: Generate ISO file
  command: "/tmp/geniso.py -y /tmp/singlenode.yaml -p {{ cvp.password }} -o /tmp"
  tags:
    - cvp_init

- name: Start cvp VM if not running
  command: "virsh start {{ cvp.KvmDomain }}"
  ignore_errors: yes 
  tags:
    - cvp_init

- name: Attach the cdrom to the cvp VM
  command: "virsh attach-disk {{ cvp.KvmDomain }} /tmp/node1-{{ cvp.vmname }}.iso  hdc --type cdrom --mode readonly"
  tags:
    - cvp_init

- name: Reboot cvp VM with the cdrom infos
  command: "virsh reboot {{ cvp.KvmDomain }}"
  tags:
    - cvp_init

# Pause for 480 seconds to power up vm
- pause:
    seconds: 480
  tags:
    - cvp_init

- name: Render CVP routes and put the file to the CVP machine
  delegate_to: "{{ cvp.ip_eth0 }}"
  template:
    src: "templates/route-eth1.j2"
    dest: "/etc/sysconfig/network-scripts/route-eth1"
  tags:
    - cvp_init

- name: Restart network service
  delegate_to: "{{ cvp.ip_eth0 }}"
  service:
    name: network
    state: restarted
  tags:
    - cvp_init

- name: Render DHCP config and put the file to the CVP machine
  delegate_to: "{{ cvp.ip_eth0 }}"
  template:
    src: "templates/dhcpd.conf.j2"
    dest: "/etc/dhcp/dhcpd.conf"
  tags:
    - cvp_init

- name: Set the dhcpd to enabled for persistence after reboot
  delegate_to: "{{ cvp.ip_eth0 }}"
  command: "systemctl enable dhcpd"
  tags:
    - cvp_init

- name: Restart dhcp service
  delegate_to: "{{ cvp.ip_eth0 }}"
  service:
    name: dhcpd
    state: restarted
  tags:
    - cvp_init

- name: "Create backup user account and add user to group cvp"
  delegate_to: "{{ cvp.ip_eth0 }}"
  user:
    name: "{{ cvp.backupuser }}"
    groups: "cvp"
  tags:
    - cvp_init

- name: "Add authorized keys"
  delegate_to: "{{ cvp.ip_eth0 }}"
  authorized_key:
    user: "{{ cvp.backupuser }}"
    key: "{{ lookup('file', '{{role_path}}/files/'+ cvp.backupuser + '.key.pub') }}"
  tags:
    - cvp_init

- name: Reset cvpadmin password
  delegate_to: "{{ cvp.ip_eth0 }}"
  command: "/cvpi/tools/update-mgmt-password -auth none -password {{ cvp.password }}"
  tags:
    - cvp_init

- name: Check if directory for configlet builders exists
  delegate_to: 127.0.0.1
  stat:
    path: '{{role_path}}/files/configlet_builders'
  register: dir_to_delete
  tags:
    - configlets

- name: Delete {{role_path}}/files/configlet_builders if exists
  delegate_to: 127.0.0.1
  file:
    state: absent
    path: '{{role_path}}/files/configlet_builders'
  when: dir_to_delete.stat.exists and dir_to_delete.stat.isdir
  tags:
    - configlets

- name: Create directory for configlet_builders again
  delegate_to: 127.0.0.1
  file:
    state: directory
    path: '{{role_path}}/files/configlet_builders'
  when: dir_to_delete is defined or dir_to_delete.stat.exist == False
  tags:
    - configlets

- name: Check if directory for configs exists
  delegate_to: 127.0.0.1
  stat:
    path: '{{role_path}}/files/configs'
  register: dir_to_delete
  tags:
    - configlets

- name: Delete {{role_path}}/files/configs if exists
  delegate_to: 127.0.0.1
  file:
    state: absent
    path: '{{role_path}}/files/configs'
  when: dir_to_delete.stat.exists and dir_to_delete.stat.isdir
  tags:
    - configlets

- name: Create directory for configs again
  delegate_to: 127.0.0.1
  file:
    state: directory
    path: '{{role_path}}/files/configs'
  when: dir_to_delete is defined or dir_to_delete.stat.exist == False
  tags:
    - configlets

- name: Copy CVP-Arista to config directory
  delegate_to: 127.0.0.1
  copy:
    src: "{{role_path}}/templates/config_templates/CVP-Arista"
    dest: "{{role_path}}/files/configs/CVP-Arista"
  tags:
    - configlets

- name: Copy mgmt-default to config directory
  delegate_to: 127.0.0.1
  copy:
    src: "{{role_path}}/templates/config_templates/mgmt-default"
    dest: "{{role_path}}/files/configs/mgmt-default"
  tags:
    - configlets

- name: Copy mgmt-oob to config directory
  delegate_to: 127.0.0.1
  copy:
    src: "{{role_path}}/templates/config_templates/mgmt-oob"
    dest: "{{role_path}}/files/configs/mgmt-oob"
  tags:
    - configlets

- name: Copy sw-mlag-a to config directory
  delegate_to: 127.0.0.1
  copy:
    src: "{{role_path}}/templates/config_templates/sw-mlag-a"
    dest: "{{role_path}}/files/configs/sw-mlag-a"
  tags:
    - configlets

- name: Copy sw-mlag-b to config directory
  delegate_to: 127.0.0.1
  copy:
    src: "{{role_path}}/templates/config_templates/sw-mlag-b"
    dest: "{{role_path}}/files/configs/sw-mlag-b"
  tags:
    - configlets

- name: Render sw-hecxx
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}"
  tags:
    - configlets

- name: Render sw-hecxx-aaa
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-aaa.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-aaa"
  tags:
    - configlets

- name: Render sw-hecxx-fab-L900
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-fab-L900.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-fab-L900"
  tags:
    - configlets

- name: Render sw-hecxx-oob-vrf
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-oob-vrf.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-oob-vrf"
  tags:
    - configlets

- name: Render sw-hecxx-tele-oob
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-tele-oob.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-tele-oob"
  tags:
    - configlets

- name: Render sw-HECxx-IPMI
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/HECxx-IPMI.j2"
    dest: "{{role_path}}/files/configs/HEC{{ hec.hec_nr }}-IPMI"
  tags:
    - configlets

- name: Render sw-hecxx-oob-common
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-oob-common.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-oob-common"
  tags:
    - configlets

- name: Render sw-hecxx-tele-default
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-tele-default.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-tele-default"
  tags:
    - configlets

- name: Render sw-HECxx-VLANs
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/HECxx-VLANs.j2"
    dest: "{{role_path}}/files/configs/HEC{{ hec.hec_nr }}-VLANs"
  tags:
    - configlets

- name: Render hecxx-hana
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/hecxx-hana.j2"
    dest: "{{role_path}}/files/configs/hec{{ hec.hec_nr }}-hana"
  tags:
    - configlets

- name: Render sw-hecxx-leaf
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-leaf.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-leaf"
  tags:
    - configlets

- name: Render hecxx-vmware
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/hecxx-vmware.j2"
    dest: "{{role_path}}/files/configs/hec{{ hec.hec_nr }}-vmware"
  tags:
    - configlets

- name: Render hecxx-xen
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/hecxx-xen.j2"
    dest: "{{role_path}}/files/configs/hec{{ hec.hec_nr }}-xen"
  tags:
    - configlets

- name: Render sw-hecxx-spine
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-spine.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-spine"
  tags:
    - configlets

- name: Render sw-hecxx-spine-xx
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-spine-xx.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-spine-{{ item }}"
  with_items: "{{ hec.spine_nr }}"
  tags:
    - configlets

- name: Render sw-hecxx-hana-7160-32CQ
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-hana-7160-32CQ.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-hana-7160-32CQ"
  tags:
    - configlets

- name: Render sw-hecxx-hvv-7160-32CQ
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-hvv-7160-32CQ.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-hvv-7160-32CQ"
  tags:
    - configlets

- name: Render sw-hecxx-hvx-7160-32CQ
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-hvx-7160-32CQ.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-hvx-7160-32CQ"
  tags:
    - configlets

- name: Render sw-hecxx-hvx-7160-48YC6
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-hvx-7160-48YC6.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-hvx-7160-48YC6"
  tags:
    - configlets

- name: Render sw-hecxx-oob-xx
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-oob-xx.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-oob-0{{ item.number }}"
  with_items: "{{ hec.oobs_2_7 }}"
  tags:
    - configlets

- name: Render sw-hecxx-str-01
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-str-01.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-str-01"
  tags:
    - configlets

- name: Render sw-hecxx-str-01a
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-str-01a.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-str-01a"
  tags:
    - configlets

- name: Render sw-hecxx-str-01b
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-str-01b.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-str-01b"
  tags:
    - configlets

- name: Render sw-hecxx-str-02
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-str-02.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-str-02"
  tags:
    - configlets

- name: Render sw-hecxx-str-02a
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-str-02a.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-str-02a"
  tags:
    - configlets

- name: Render sw-hecxx-str-02b
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-str-02b.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-str-02b"
  tags:
    - configlets

- name: Render sw-hecxx-brdr-01
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-brdr-01.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-brdr-01"
  tags:
    - configlets

- name: Render sw-hecxx-brdr-01a
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-brdr-01a.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-brdr-01a"
  tags:
    - configlets

- name: Render sw-hecxx-brdr-01b
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-brdr-01b.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-brdr-01b"
  tags:
    - configlets

- name: Render sw-hecxx-brdr-02
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-brdr-02.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-brdr-02"
  tags:
    - configlets

- name: Render sw-hecxx-brdr-02a
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-brdr-02a.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-brdr-02a"
  tags:
    - configlets

- name: Render sw-hecxx-brdr-02b
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-brdr-02b.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-brdr-02b"
  tags:
    - configlets

- name: Render sw-hecxx-brdr-03
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-brdr-03.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-brdr-03"
  tags:
    - configlets

- name: Render sw-hecxx-brdr-03a
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-brdr-03a.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-brdr-03a"
  tags:
    - configlets

- name: Render sw-hecxx-brdr-03b
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-brdr-03b.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-brdr-03b"
  tags:
    - configlets

- name: Render sw-hecxx-oob-01
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-oob-01.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-oob-01"
  tags:
    - configlets

- name: Render sw-hecxx-oob-01a
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-oob-01a.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-oob-01a"
  tags:
    - configlets

- name: Render sw-hecxx-oob-01b
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-oob-01b.j2"
    dest: "{{role_path}}/files/configs/sw-hec{{ hec.hec_nr }}-oob-01b"
  tags:
    - configlets

- name: Render sw-hecxx-autoconf
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-autoconf.j2"
    dest: "{{role_path}}/files/configlet_builders/sw-hec{{ hec.hec_nr }}-autoconf"
  tags:
    - configlets

- name: Render sw-hecxx-autoconf-ipmi
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-autoconf-ipmi.j2"
    dest: "{{role_path}}/files/configlet_builders/sw-hec{{ hec.hec_nr }}-autoconf-ipmi"
  tags:
    - configlets

- name: Render sw-hecxx-descriptions
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-descriptions.j2"
    dest: "{{role_path}}/files/configlet_builders/sw-hec{{ hec.hec_nr }}-descriptions"
  tags:
    - configlets

- name: Render sw-hecxx-descriptions-hvv
  delegate_to: 127.0.0.1
  template:
    src: "templates/config_templates/sw-hecxx-descriptions-hvv.j2"
    dest: "{{role_path}}/files/configlet_builders/sw-hec{{ hec.hec_nr }}-descriptions-hvv"
  tags:
    - configlets

- name: Copy configlet builders to the CVP
  delegate_to: "{{ cvp.ip_eth0 }}" 
  copy:
    src: "{{role_path}}/files/configlet_builders"
    dest: /tmp
    owner: root
    group: root
    mode: 0755
  tags:
    - upload_configlets

- name: Copy configlets to the CVP
  delegate_to: "{{ cvp.ip_eth0 }}" 
  copy:
    src: "{{role_path}}/files/configs"
    dest: /tmp
    owner: root
    group: root
    mode: 0755
  tags:
    - upload_configlets

- name: Copy python upload script for configlet builders to CVP
  delegate_to: "{{ cvp.ip_eth0 }}" 
  copy:
    src: "{{role_path}}/files/configlet_builder.py"
    dest: /tmp/configlet_builder.py
    owner: root
    group: root
    mode: 0755
  tags:
    - upload_configlets

- name: Copy python upload script for configlets to CVP
  delegate_to: "{{ cvp.ip_eth0 }}" 
  copy:
    src: "{{role_path}}/files/configlets.py"
    dest: /tmp/configlets.py
    owner: root
    group: root
    mode: 0755
  tags:
    - upload_configlets

- name: Copy cvprac to /tmp/cvprac/ direcory on CVP
  delegate_to: "{{ cvp.ip_eth0 }}" 
  copy:
    src: "{{role_path}}/files/cvprac"
    dest: /tmp
    owner: root
    group: root
    mode: 0755
  tags:
    - reload_TerminAttr
    - upload_configlets

- name: Upload generated configlet builders
  delegate_to: "{{ cvp.ip_eth0 }}"
  command: python /tmp/configlet_builder.py "/tmp/configlet_builders/" "{{ cvp.ip_eth0 }}" "{{ cvp.password }}"
  tags:
    - upload_configlets

- name: Upload all generated configlets
  delegate_to: "{{ cvp.ip_eth0 }}"
  command: python /tmp/configlets.py "/tmp/configs/" "{{ cvp.ip_eth0 }}" "{{ cvp.password }}"
  tags:
    - upload_configlets

- name: Copy container creation script to CVP
  delegate_to: "{{ cvp.ip_eth0 }}" 
  copy:
    src: "{{role_path}}/files/container_and_mapping.py"
    dest: /tmp/container_and_mapping.py
    owner: root
    group: root
    mode: 0755
  tags:
    - create_containers

- name: Create the container structure in CVP and add configlets to containers
  delegate_to: "{{ cvp.ip_eth0 }}" 
  command: python /tmp/container_and_mapping.py "{{ container }}" "{{ hec.hec_nr }}" "{{ cvp.ip_eth0 }}" "{{ cvp.password }}"
  tags:
    - create_containers

- name: Copy aaa server creation script to CVP
  delegate_to: "{{ cvp.ip_eth0 }}" 
  copy:
    src: "{{role_path}}/files/aaa_configuration.py"
    dest: /tmp/aaa_configuration.py
    owner: root
    group: root
    mode: 0755
  tags:
    - configure_aaa

- name: Configure AAA servers
  delegate_to: "{{ cvp.ip_eth0 }}"
  command: python /tmp/aaa_configuration.py "{{ cvp.aaa_config }}" "{{ cvp.ip_eth0 }}" "{{ cvp.password }}"
  tags:
    - configure_aaa

- name: Copy restore_reload_TerminAttr.py to CVP
  delegate_to: "{{ cvp.ip_eth0 }}"
  copy:
    src: "{{role_path}}/files/restore_reload_TerminAttr.py"
    dest: /tmp/restore_reload_TerminAttr.py
    owner: root
    group: root
    mode: 0755
  tags:
    - reload_TerminAttr

- name: Reload TerminAttr on devices after restoring a backup
  delegate_to: "{{ cvp.ip_eth0 }}"
  command: "python /tmp/restore_reload_TerminAttr.py {{ cvp.ip_eth0 }} {{ cvp.password }}"
  tags:
    - reload_TerminAttr
