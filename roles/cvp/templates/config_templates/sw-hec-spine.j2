{########## INTERFACE CONFIGURATION WHICH IS SPECIFIC TO SPINES ##########}
{% set ports_per_lc = 36 %}
{% if hec.spine.model|string is search('75[01][486].*') %}
{% set lc_start = 3 %}
{% set lc_end   = lc_start + hec.spine.linecards %}
{% endif %}
{% if hec.spine.model|string is search('7280.*') %}
{% set lc_start = 3 %}
{% set lc_end   = 4 %}
{% endif %}
{% if hec.spine.model|string is search('.*-.*') %}
{% set ports_per_lc = hec.spine.model|string %}
{% set ports_per_lc = ports_per_lc|regex_replace('^.*-(?P<num>[1-9][0-9])$', '\\g<num>') %}
{% endif %}
{% set create_ip_on_interface = "no" %}
{% set port_range_end = ports_per_lc|int + 1 %}
! DEBUG: port_range_end {{port_range_end}}
{% include "templates/config_templates/sw-hec-spine-ips.j2" %}
{########## BGP CONFIGURATION ##########}
{% if hec.fabric.vtep_distribution_mode == "evpn" %}
peer-filter EVPN-PF
! ##### {{ hec.as_low }}-{{ hec.as_high }} == 641{{ hec.hec_nr }}.10001-641{{ hec.hec_nr }}.11199 #####
   10 match as-range {{ hec.as_low }}-{{ hec.as_high }} result accept
!
{% endif %}
peer-filter LEAF-PF
! ##### {{ hec.as_low }}-{{ hec.as_high }} == 641{{ hec.hec_nr }}.10001-641{{ hec.hec_nr }}.11199 #####
   10 match as-range {{ hec.as_low }}-{{ hec.as_high }} result accept
!
router bgp 641{{ hec.hec_nr }}.10000
   bgp asn notation asdot
   maximum-paths 8 ecmp 16
{% if hec.fabric.vtep_distribution_mode == "evpn" %}
{% for listen_range in hec.fabric.bgp_listen_ranges %}
   bgp listen range {{ listen_range }} peer-group EVPN-PG peer-filter EVPN-PF
{% endfor %}
   neighbor EVPN-PG peer-group
   neighbor EVPN-PG update-source Loopback1
   neighbor EVPN-PG fall-over bfd
   neighbor EVPN-PG ebgp-multihop 2
   neighbor EVPN-PG send-community standard extended
   neighbor EVPN-PG maximum-routes 0
{% endif %}
!
   neighbor LEAF-PG peer-group
   neighbor LEAF-PG send-community
{% if hec.spine.underlay_bfd %}
   neighbor LEAF-PG fall-over bfd
{% endif %}
   neighbor LEAF-PG soft-reconfiguration inbound all
   neighbor LEAF-PG maximum-routes {{ hec.fabric.bgp_maximum_routes }}
!
{% if hec.fabric.vtep_distribution_mode == "evpn" %}
   address-family evpn
      bgp next-hop-unchanged
      neighbor EVPN-PG activate
   !
{% endif %}
   address-family ipv4
{% if hec.fabric.vtep_distribution_mode == "evpn" %}
      no neighbor EVPN-PG activate
{% endif %}
      neighbor LEAF-PG activate
!
{########## SPINE MAINTENANCE CONFIGURATION ##########}
group interface FABRIC
{% if hec.spine.model|string is search('75[01][486].*')  %}
   interface Et{% for lc in range(lc_start, lc_end) %}{% for subintf in range(1, port_range_end) %}{{ lc }}/{{ subintf }}/1{% if not ( lc == lc_end-1 and subintf == ports_per_lc ) %},{% endif %}{% endfor %}{% endfor %}

{% endif %}
{% if hec.spine.model|string is search('7280.*')  %}
   interface Et{% for subintf in range(1, port_range_end) %}{{ subintf }}/1{% if not ( subintf == ports_per_lc ) %},{% endif %}{% endfor %}

{% endif %}
   exit
!
group bgp ALL-LEAF
  neighbor LEAF-PG
  exit
!
maintenance
   unit QUAY
      group interface FABRIC
      group bgp ALL-LEAF
    exit
  exit
!
! ============= to enable a port, add it to the list of interfaces below =============
!
{% if spine_interfaces is defined %}
{% for interface in spine_interfaces.interfaces %}
{% if "Ethernet" in interface.name %}
{% if interface.enabled %}
interface {{ interface.name }}
 no shutdown
{% endif %}
{% endif %}
{% endfor %}
{% endif %}
