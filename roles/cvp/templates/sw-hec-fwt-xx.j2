{# this is to have to macros available that are used for switch port generation #}
{% import "templates/libs.j2" as funcs with context%}
hostname sw-hec{{ hec.hec_nr }}-fwt-{{ item.number|string}}
!
snmp-server contact {{ item.snmp.contact}}
snmp-server location {{ item.snmp.location}}
!
{% if hec.is_tacacs %}
ip tacacs source-interface Vlan21
{% else %}
ip radius source-interface Vlan21
{% endif %}
!
logging source-interface Vlan21
!
{{eos_cmd.c_ntp_source}} Vlan21
!
mlag configuration
   domain-id MLAG-fwt
!
vlan 4094
   name MLAG_Vlan
!
spanning-tree mst 0-1 priority 28672
!
{% if item.bgp is defined %}
interface Loopback0
   ip address {{ item.bgp.router_id | ipaddr('address') }}/32
!
router ospf 1
   router-id {{ item.bgp.router_id }}
   passive-interface default
   no passive-interface Vlan4094
   max-lsa 12000
   network 198.19.224.0/30 area 0.0.0.0
   network 198.19.251.0/24 area 0.0.0.0
   network 198.19.249.0/24 area 0.0.0.0
!
router bgp {{ item.bgp.local_asn }}
   router-id {{ item.bgp.router_id }}
{% for peer in item.bgp.peers %}
{% for setting in [ 'route-map ADMIN_MPLS_IN in', 'route-map ADMIN_MPLS_OUT out', 'maximum-routes 12000' ] if peer.remote_asn != item.bgp.local_asn %}
   neighbor {{ peer.ipv4 }} {{ setting }}
{% endfor %}
{% for setting in [ 'remote-as ' + peer.remote_asn|string, 'maximum-routes 12000' ] %}
   neighbor {{ peer.ipv4 }} {{ setting }}
{% endfor %}
{% endfor %}
{% endif %}
!
interface Loopback494
   description !!! DO NOT TOUCH - HSRP tracking interface !!!
!
track 494 interface Loopback494 line-protocol
!
interface Vlan4094
   ip ospf network point-to-point
!
ip route {{ hec.inband_trans_cvp }}/32 {{ hec.oob_cvp }}
!
ip routing
no ip routing vrf OOB
!
ip prefix-list MATCH_ANY seq 5 permit 0.0.0.0/0 le 32
{% for prefix in hec.admin_mpls %}
ip prefix-list PREF_ADMIN_MPLS seq {{ loop.index * 10 }} permit {{ prefix }}
{% endfor %}
!
route-map ADMIN_MPLS_IN deny 10
   match ip address prefix-list PREF_ADMIN_MPLS
!
route-map ADMIN_MPLS_IN permit 20
   match ip address prefix-list MATCH_ANY
!
route-map ADMIN_MPLS_OUT permit 10
   match ip address prefix-list PREF_ADMIN_MPLS
!
{% if item.ports is defined %}
{% for port in item.ports %}
{{ funcs.switchport(port) }}
{% endfor %}
{% endif %}{# end of port generation #}
{% if item.port_channels is defined %}
{% for po in item.port_channels %}
{{ funcs.switchportchannels(po) }}
{% endfor %}
{% endif %}{# end of port-channel generation #}
!
{# there must be some static routes, at least back into this HEC DC, so we do not check if it's defined but
   but simply rely on the playbook to die if it's missing the entries in hecXX.yml :) #}
{% set id_short = item.number | regex_replace('^.*(?P<id>[0123456]{2})[ab]$', '\\g<id>') %}
{% for route in hec.routes.static['fwt'+id_short] %}
{{ route }}
{% if route.vrf is not defined %}
{% set vrf = '' %}
{% else %}
{% set vrf = route.vrf %}
{% endif %}
{% if route.interface is not defined %}
{% set interface = '' %}
{% else %}
{% set interface = route.interface %}
{% endif %}
{% if route.nexthop is not defined %}
{% set nexthop = '' %}
{% else %}
{% set nexthop = route.nexthop %}
{% endif %}
{% if route.metric is not defined %}
{% set metric = '' %}
{% else %}
{% set metric = route.metric|string %}
{% endif %}
{% if route.redist_bgp is not defined %}
{% set redist_bgp = False %}
{% else %}
{% set redist_bgp = route.redist_bgp %}
{% endif %}
{#
  call the macro to render the route statement
#}
{{ funcs.render_route_statement(route.destination, nexthop, vrf, interface, metric, redist_bgp) }}
{% endfor %}
